<?xml version="1.0" standalone="yes"?>
<!-- build configuration -->
<project name="s3lib" default="compile" basedir=".">

    <!-- configuration properties -->
    <property name="app.name"     value="s3lib"/>
    <property name="deploy.dir"   value="dist"/>
    <property name="savedoc.dir"  value="docs"/>

    <!-- derived properties -->  
    <property name="dist.jar"       value="${app.name}.jar"/>
    <property name="javadoc.home"   value="${deploy.dir}/docs"/>

    <!-- import some targets to enumerate library dependencies -->
    <!-- this is magic to support building within an enclosing project, don't touch it. -->
    <property name="libs.dir" value="java/lib"/>
    <import file="libs-incl.xml"/>

    <!-- declare our classpath -->
    <path id="classpath">
        <pathelement location="${deploy.dir}/classes"/>
        <fileset dir="${deploy.dir}/lib" includes="**/*.jar"/>
    </path>

    <!-- prepares the application directories -->
    <target name="prepare">
        <mkdir dir="${deploy.dir}"/>
        <mkdir dir="${deploy.dir}/classes"/>
        <mkdir dir="${deploy.dir}/tests"/>
        <mkdir dir="${deploy.dir}/lib"/>
        <mkdir dir="${javadoc.home}"/>
        <copy todir="${deploy.dir}/classes">
            <fileset dir="src/java" includes="**/*.properties"/>
        </copy>
        <copy todir="${deploy.dir}/lib" flatten="true">
            <fileset refid="${app.name}.libs"/>
        </copy>
    </target>

    <!-- cleans out the intermediate build files -->
    <target name="clean">
        <delete dir="${deploy.dir}/classes"/>
        <delete dir="${deploy.dir}/docs"/>
    </target>

    <!-- cleans out the installed application -->
    <target name="distclean">
        <delete dir="${deploy.dir}"/>
    </target>

    <!-- build the java class files -->
    <target name="compile" depends="prepare">
        <javac srcdir="src/java" destdir="${deploy.dir}/classes"
            debug="on" optimize="${build.optimize}" deprecation="on"
            source="1.5" target="1.5">
            <classpath refid="classpath"/>
            <compilerarg value="-Xlint:unchecked"/>

            <exclude name="**/*Test.java"/>
        </javac>
    </target>

    <!-- build and run the unit tests -->
    <target name="test" depends="compile">
        <!-- haul in our AWS id and key -->
        <property file="test.properties"/>

        <!-- build the tests -->
        <javac srcdir="src/java" destdir="${deploy.dir}/tests"
            debug="on" optimize="${build.optimize}" deprecation="on"
            source="1.5" target="1.5" includes="**/*Test.java">
            <classpath refid="classpath"/>
            <compilerarg value="-Xlint:unchecked"/>
        </javac>

        <!-- run the tests -->
        <junit printsummary="yes">
            <!-- Vend the aws. properties -->
            <syspropertyset>
                <propertyref prefix="aws."/>
            </syspropertyset>

            <!-- include the tests in our class path -->
            <classpath>
                <pathelement location="${deploy.dir}/classes"/>
                <pathelement location="${deploy.dir}/tests"/>
                <fileset dir="${deploy.dir}/lib" includes="**/*.jar"/>
            </classpath>

            <!-- human output -->
            <formatter type="brief" usefile="false"/>

            <!-- batch run our tests -->
            <batchtest>
                <fileset dir="src/java">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- build the javadoc documentation -->
    <target name="javadoc" depends="prepare">
        <javadoc sourcepath="src/java"
            packagenames="com.threerings.*"
            destdir="${javadoc.home}"
            additionalparam="-breakiterator"
            link="http://dev.threerings.net/devel/docs/s3lib/">
            <classpath refid="classpath"/>
            <link href="http://java.sun.com/j2se/1.4/docs/api/"/>
        </javadoc>
    </target>

    <!-- builds the javadocs and stuffs them in a directory where they won't
    be blown away when we do "clean" next time -->
    <target name="savedoc" depends="javadoc">
        <delete dir="${savedoc.dir}/api"/>
        <copy todir="${savedoc.dir}/api">
            <fileset dir="${javadoc.home}" includes="**/*"/>
        </copy>
    </target>

    <!-- the default target is to rebuild everything -->
    <target name="all" depends="clean,prepare,compile,javadoc"/>

    <!-- builds our distribution files (war and jar) -->
    <target name="dist" depends="prepare,compile">
        <jar destfile="${deploy.dir}/${dist.jar}"
            basedir="${deploy.dir}/classes"/>
    </target>
</project>
